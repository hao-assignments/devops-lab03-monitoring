namespace: petclinic-prod

services:
  config-server:
    enabled: true
    image: springcommunity/spring-petclinic-config-server:latest
    containerPort: 8888
    port: 8888
    serviceType: ClusterIP

  discovery-server:
    enabled: true
    image: springcommunity/spring-petclinic-discovery-server:latest
    containerPort: 8761
    port: 8761
    serviceType: ClusterIP
    useEureka: true

  customers-service:
    enabled: true
    image: springcommunity/spring-petclinic-customers-service:latest
    containerPort: 8081
    port: 8081
    serviceType: ClusterIP
    useEureka: true

  visits-service:
    enabled: true
    image: springcommunity/spring-petclinic-visits-service:latest
    containerPort: 8082
    port: 8082
    serviceType: ClusterIP
    useEureka: true

  vets-service:
    enabled: true
    image: springcommunity/spring-petclinic-vets-service:latest
    containerPort: 8083
    port: 8083
    serviceType: ClusterIP
    useEureka: true

  api-gateway:
    enabled: true
    image: springcommunity/spring-petclinic-api-gateway:latest
    containerPort: 8080
    port: 8080
    serviceType: LoadBalancer
    useEureka: true

  admin-server:
    enabled: true
    image: springcommunity/spring-petclinic-admin-server:latest
    containerPort: 9090
    port: 9090
    serviceType: LoadBalancer

  tracing-server:
    enabled: true
    image: openzipkin/zipkin:latest
    containerPort: 9411
    port: 9411
    serviceType: LoadBalancer

# Monitoring configuration
prometheus:
  enabled: true
  server:
    service:
      type: LoadBalancer
  alertmanager:
    enabled: true
    service:
      type: LoadBalancer
  serverFiles:
    prometheus.yml:
      rule_files:
        - "alert_rules.yml"
      scrape_configs:
        - job_name: prometheus
          static_configs:
            - targets: ['localhost:9090']
        - job_name: api-gateway
          metrics_path: /actuator/prometheus
          static_configs:
            - targets: ['api-gateway.petclinic-prod.svc.cluster.local:8080']
        - job_name: customers-service
          metrics_path: /actuator/prometheus
          static_configs:
            - targets: ['customers-service.petclinic-prod.svc.cluster.local:8081']
        - job_name: visits-service
          metrics_path: /actuator/prometheus
          static_configs:
            - targets: ['visits-service.petclinic-prod.svc.cluster.local:8082']
        - job_name: vets-service
          metrics_path: /actuator/prometheus
          static_configs:
            - targets: ['vets-service.petclinic-prod.svc.cluster.local:8083']
    alert_rules.yml:
      groups:
        - name: petclinic-prod-alerts
          rules:
            - alert: HighErrorRate
              expr: increase(http_server_requests_seconds_count{status=~"4..|5.."}[30s]) > 10
              for: 0s
              labels:
                severity: critical
                environment: prod
                service: "{{ $labels.job }}"
              annotations:
                summary: "CRITICAL: High error rate detected in production"
                description: "Service {{ $labels.job }} has more than 10 error requests in the last 30 seconds. Current count: {{ $value }}"
                trace_query: 'http_server_requests_seconds_count{job="{{ $labels.job }}", status=~"4..|5.."}'
                log_query: '{namespace="petclinic-prod", container="{{ $labels.job }}"} |~ "ERROR|WARN"'
                runbook_url: "https://runbooks.petclinic.com/alerts/high-error-rate"
            - alert: ServiceDown
              expr: up == 0
              for: 30s
              labels:
                severity: critical
                environment: prod
              annotations:
                summary: "CRITICAL: Service is down in production"
                description: "Service {{ $labels.job }} has been down for more than 30 seconds"
                runbook_url: "https://runbooks.petclinic.com/alerts/service-down"
            - alert: HighResponseTime
              expr: histogram_quantile(0.95, rate(http_server_requests_seconds_bucket[5m])) > 1
              for: 1m
              labels:
                severity: critical
                environment: prod
              annotations:
                summary: "CRITICAL: High response time in production"
                description: "95th percentile response time for {{ $labels.job }} is above 1 second ({{ $value }}s)"
            - alert: HighMemoryUsage
              expr: (container_memory_usage_bytes / container_spec_memory_limit_bytes) > 0.8
              for: 5m
              labels:
                severity: warning
                environment: prod
              annotations:
                summary: "High memory usage detected"
                description: "Container {{ $labels.container }} is using more than 80% of its memory limit"
  alertmanagerFiles:
    alertmanager.yml:
      global:
        smtp_smarthost: 'localhost:587'
        smtp_from: 'alerts@petclinic.com'
        resolve_timeout: 5m
      route:
        group_by: ['alertname', 'environment', 'service']
        group_wait: 10s
        group_interval: 10s
        repeat_interval: 1h
        receiver: 'production-alerts'
        routes:
          - match:
              severity: critical
            receiver: 'critical-production-alerts'
            group_wait: 5s
            repeat_interval: 15m
          - match:
              severity: warning
            receiver: 'warning-production-alerts'
      receivers:
        - name: 'production-alerts'
          webhook_configs:
            - url: 'http://127.0.0.1:5001/'
              send_resolved: true
        - name: 'critical-production-alerts'
          webhook_configs:
            - url: 'http://127.0.0.1:5001/critical'
              send_resolved: true
              title: 'PRODUCTION CRITICAL: {{ .GroupLabels.alertname }}'
              text: '{{ range .Alerts }}{{ .Annotations.summary }}: {{ .Annotations.description }}{{ end }}'
        - name: 'warning-production-alerts'
          webhook_configs:
            - url: 'http://127.0.0.1:5001/warning'
              send_resolved: true

loki-stack:
  grafana:
    enabled: true
    service:
      type: LoadBalancer
    adminPassword: admin123
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus
            type: prometheus
            url: http://petclinic-prod-prometheus-server.petclinic-prod.svc.cluster.local
            access: proxy
            isDefault: true
          - name: Loki
            type: loki
            url: http://petclinic-prod-loki.petclinic-prod.svc.cluster.local:3100
            access: proxy
            jsonData:
              derivedFields:
                - name: "Trace ID"
                  matcherRegex: "trace_id=(\\w+)"
                  url: "/explore?orgId=1&left=%5B%22now-1h%22,%22now%22,%22Loki%22,%7B%22expr%22:%22%7Btrace_id%3D%5C%22$${__value.raw}%5C%22%7D%22%7D%5D"
                - name: "Request ID"
                  matcherRegex: "request_id=(\\w+)"
                  url: "/explore?orgId=1&left=%5B%22now-1h%22,%22now%22,%22Loki%22,%7B%22expr%22:%22%7Brequest_id%3D%5C%22$${__value.raw}%5C%22%7D%22%7D%5D"
          - name: Jaeger
            type: jaeger
            url: http://tracing-server.petclinic-prod.svc.cluster.local:9411
            access: proxy
  loki:
    persistence:
      enabled: true
      size: 5Gi
    config:
      schema_config:
        configs:
          - from: 2020-10-24
            store: boltdb-shipper
            object_store: filesystem
            schema: v11
            index:
              prefix: index_
              period: 24h
      server:
        http_listen_port: 3100
  promtail:
    enabled: true
    config:
      clients:
        - url: http://petclinic-prod-loki.petclinic-prod.svc.cluster.local:3100/loki/api/v1/push
      scrape_configs:
        - job_name: kubernetes-pods
          kubernetes_sd_configs:
            - role: pod
              namespaces:
                names: ['petclinic-prod']
          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_pod_container_name]
              target_label: container
            - source_labels: [__meta_kubernetes_namespace]
              target_label: namespace
            - source_labels: [__meta_kubernetes_pod_name]
              target_label: pod
            - source_labels: [__meta_kubernetes_pod_label_app]
              target_label: service
            - source_labels: [__meta_kubernetes_pod_label_version]
              target_label: version
          pipeline_stages:
            - match:
                selector: '{container=~".*petclinic.*"}'
                stages:
                  - regex:
                      expression: '.*(?:traceId|trace.id|X-Trace-Id)[:=]\s*(?P<trace_id>[a-f0-9]+).*'
                  - regex:
                      expression: '.*(?:spanId|span.id|X-Span-Id)[:=]\s*(?P<span_id>[a-f0-9]+).*'
                  - regex:
                      expression: '.*(?:requestId|request.id|X-Request-Id)[:=]\s*(?P<request_id>[a-zA-Z0-9\-]+).*'
                  - regex:
                      expression: '.*(?:userId|user.id|X-User-Id)[:=]\s*(?P<user_id>[a-zA-Z0-9\-]+).*'
                  - regex:
                      expression: '.*(?:sessionId|session.id|X-Session-Id)[:=]\s*(?P<session_id>[a-zA-Z0-9\-]+).*'
                  - regex:
                      expression: '.*\s(?P<level>ERROR|WARN|INFO|DEBUG|TRACE)\s.*'
                  - regex:
                      expression: '.*status[:=]\s*(?P<status_code>[0-9]+).*'
                  - regex:
                      expression: '.*method[:=]\s*(?P<http_method>[A-Z]+).*'
                  - regex:
                      expression: '.*uri[:=]\s*(?P<uri>[^\s]+).*'
                  - labels:
                      trace_id:
                      span_id:
                      request_id:
                      user_id:
                      session_id:
                      level:
                      status_code:
                      http_method:
                      uri:
                      environment: prod