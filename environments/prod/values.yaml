namespace: petclinic-prod

services:
  config-server:
    enabled: true
    image: springcommunity/spring-petclinic-config-server:latest
    containerPort: 8888
    port: 8888
    serviceType: ClusterIP

  discovery-server:
    enabled: true
    image: springcommunity/spring-petclinic-discovery-server:latest
    containerPort: 8761
    port: 8761
    serviceType: ClusterIP
    useEureka: true

  customers-service:
    enabled: true
    image: springcommunity/spring-petclinic-customers-service:latest
    containerPort: 8081
    port: 8081
    serviceType: ClusterIP
    useEureka: true

  visits-service:
    enabled: true
    image: springcommunity/spring-petclinic-visits-service:latest
    containerPort: 8082
    port: 8082
    serviceType: ClusterIP
    useEureka: true

  vets-service:
    enabled: true
    image: springcommunity/spring-petclinic-vets-service:latest
    containerPort: 8083
    port: 8083
    serviceType: ClusterIP
    useEureka: true

  api-gateway:
    enabled: true
    image: springcommunity/spring-petclinic-api-gateway:latest
    containerPort: 8080
    port: 8080
    serviceType: LoadBalancer
    useEureka: true

  admin-server:
    enabled: true
    image: springcommunity/spring-petclinic-admin-server:latest
    containerPort: 9090
    port: 9090
    serviceType: LoadBalancer

  tracing-server:
    enabled: true
    image: openzipkin/zipkin:latest
    containerPort: 9411
    port: 9411
    serviceType: LoadBalancer

# Monitoring configuration
prometheus:
  enabled: true
  server:
    service:
      type: LoadBalancer
  alertmanager:
    enabled: true
    service:
      type: LoadBalancer
  serverFiles:
    prometheus.yml:
      scrape_configs:
        - job_name: prometheus
          static_configs:
            - targets: ['localhost:9090']
        - job_name: api-gateway
          metrics_path: /actuator/prometheus
          static_configs:
            - targets: ['api-gateway.petclinic-prod.svc.cluster.local:8080']
        - job_name: customers-service
          metrics_path: /actuator/prometheus
          static_configs:
            - targets: ['customers-service.petclinic-prod.svc.cluster.local:8081']
        - job_name: visits-service
          metrics_path: /actuator/prometheus
          static_configs:
            - targets: ['visits-service.petclinic-prod.svc.cluster.local:8082']
        - job_name: vets-service
          metrics_path: /actuator/prometheus
          static_configs:
            - targets: ['vets-service.petclinic-prod.svc.cluster.local:8083']
    alerts:
      groups:
        - name: petclinic-alerts
          rules:
            - alert: HighErrorRate
              expr: increase(http_server_requests_seconds_count{status=~"4..|5.."}[30s]) > 10
              for: 0s
              labels:
                severity: critical
                service: "{{ $labels.job }}"
              annotations:
                summary: "High error rate detected"
                description: "Service {{ $labels.job }} has more than 10 error requests in the last 30 seconds"
            - alert: ServiceDown
              expr: up == 0
              for: 30s
              labels:
                severity: critical
              annotations:
                summary: "Service is down"
                description: "Service {{ $labels.job }} has been down for more than 30 seconds"
  alertmanagerFiles:
    alertmanager.yml:
      global:
        smtp_smarthost: 'localhost:587'
        smtp_from: 'alerts@petclinic.com'
      route:
        group_by: ['alertname']
        group_wait: 10s
        group_interval: 10s
        repeat_interval: 1h
        receiver: 'web.hook'
      receivers:
        - name: 'web.hook'
          webhook_configs:
            - url: 'http://127.0.0.1:5001/'

loki-stack:
  grafana:
    enabled: true
    service:
      type: LoadBalancer
    adminPassword: admin123
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus
            type: prometheus
            url: http://prometheus-server.petclinic-prod.svc.cluster.local
            access: proxy
          - name: Loki
            type: loki
            url: http://loki.petclinic-prod.svc.cluster.local:3100
            access: proxy
          - name: Jaeger
            type: jaeger
            url: http://tracing-server.petclinic-prod.svc.cluster.local:9411
            access: proxy
  loki:
    config:
      schema_config:
        configs:
          - from: 2020-10-24
            store: boltdb-shipper
            object_store: filesystem
            schema: v11
            index:
              prefix: index_
              period: 24h
      server:
        http_listen_port: 3100
      ingester:
        lifecycler:
          address: 127.0.0.1
          ring:
            kvstore:
              store: inmemory
            replication_factor: 1
      storage_config:
        boltdb_shipper:
          active_index_directory: /loki/boltdb-shipper-active
          cache_location: /loki/boltdb-shipper-cache
          shared_store: filesystem
        filesystem:
          directory: /loki/chunks
  promtail:
    enabled: true
    config:
      clients:
        - url: http://loki.petclinic-prod.svc.cluster.local:3100/loki/api/v1/push
      scrape_configs:
        - job_name: kubernetes-pods
          kubernetes_sd_configs:
            - role: pod
          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_pod_container_name]
              target_label: container
            - source_labels: [__meta_kubernetes_namespace]
              target_label: namespace
            - source_labels: [__meta_kubernetes_pod_name]
              target_label: pod
          pipeline_stages:
            - match:
                selector: '{container=~".*petclinic.*"}'
                stages:
                  - regex:
                      expression: '.*traceId=(?P<trace_id>[a-f0-9]+).*'
                  - labels:
                      trace_id: