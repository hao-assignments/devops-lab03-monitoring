# Namespace will be provided by environment-specific values
namespace: "petclinic-template"

# Define all services in a single structure
services:
  config-server:
    enabled: true
    image: springcommunity/spring-petclinic-config-server:latest
    containerPort: 8888
    port: 8888
    serviceType: ClusterIP
    resources:
      limits:
        memory: 512Mi

  discovery-server:
    enabled: true
    image: springcommunity/spring-petclinic-discovery-server:latest
    containerPort: 8761
    port: 8761
    serviceType: ClusterIP
    useEureka: true
    resources:
      limits:
        memory: 512Mi

  customers-service:
    enabled: true
    image: springcommunity/spring-petclinic-customers-service:latest
    containerPort: 8081
    port: 8081
    serviceType: ClusterIP
    useEureka: true
    resources:
      limits:
        memory: 512Mi

  visits-service:
    enabled: true
    image: springcommunity/spring-petclinic-visits-service:latest
    containerPort: 8082
    port: 8082
    serviceType: ClusterIP
    useEureka: true
    resources:
      limits:
        memory: 512Mi

  vets-service:
    enabled: true
    image: springcommunity/spring-petclinic-vets-service:latest
    containerPort: 8083
    port: 8083
    serviceType: ClusterIP
    useEureka: true
    resources:
      limits:
        memory: 512Mi

  api-gateway:
    enabled: true
    image: springcommunity/spring-petclinic-api-gateway:latest
    containerPort: 8080
    port: 8080
    serviceType: ClusterIP
    resources:
      limits:
        memory: 512Mi

  admin-server:
    enabled: true
    image: springcommunity/spring-petclinic-admin-server:latest
    containerPort: 9090
    port: 9090
    serviceType: ClusterIP
    resources:
      limits:
        memory: 512Mi

  tracing-server:
    enabled: true
    image: openzipkin/zipkin:latest
    containerPort: 9411
    port: 9411
    serviceType: ClusterIP
    resources:
      limits:
        memory: 512Mi

# Monitoring configuration
prometheus:
  enabled: true
  alertmanager:
    enabled: true
  pushgateway:
    enabled: false
  server:
    persistentVolume:
      enabled: false
    service:
      type: ClusterIP
  serverFiles:
    prometheus.yml:
      rule_files:
        - "alert_rules.yml"
      scrape_configs:
        - job_name: prometheus
          static_configs:
            - targets: ['localhost:9090']
        - job_name: kubernetes-pods
          kubernetes_sd_configs:
            - role: pod
              namespaces:
                names: ['{{ .Values.namespace }}']
          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
              action: replace
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
              target_label: __address__
            - source_labels: [__meta_kubernetes_pod_container_name]
              target_label: container
            - source_labels: [__meta_kubernetes_namespace]
              target_label: namespace
            - source_labels: [__meta_kubernetes_pod_name]
              target_label: pod
            - source_labels: [__meta_kubernetes_pod_label_app]
              target_label: service
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
    alert_rules.yml:
      groups:
        - name: petclinic-alerts
          rules:
            - alert: HighErrorRate
              expr: increase(http_server_requests_seconds_count{status=~"4..|5.."}[30s]) > 10
              for: 0s
              labels:
                severity: critical
                environment: '{{ .Values.namespace | replace "petclinic-" "" }}'
                service: "{{ $labels.service }}"
              annotations:
                summary: "High error rate detected in {{ $labels.service }}"
                description: "Service {{ $labels.service }} in {{ $labels.namespace }} has more than 10 error requests in the last 30 seconds. Current count: {{ $value }}"
                trace_query: 'http_server_requests_seconds_count{service="{{ $labels.service }}", status=~"4..|5.."}'
                log_query: '{namespace="{{ $labels.namespace }}", container="{{ $labels.service }}"} |~ "ERROR|WARN"'
            - alert: ServiceDown
              expr: up == 0
              for: 30s
              labels:
                severity: critical
                environment: '{{ .Values.namespace | replace "petclinic-" "" }}'
              annotations:
                summary: "Service {{ $labels.job }} is down"
                description: "Service {{ $labels.job }} in {{ $labels.namespace }} has been down for more than 30 seconds"
            - alert: HighResponseTime
              expr: histogram_quantile(0.95, rate(http_server_requests_seconds_bucket[5m])) > 2
              for: 2m
              labels:
                severity: warning
                environment: '{{ .Values.namespace | replace "petclinic-" "" }}'
              annotations:
                summary: "High response time detected"
                description: "95th percentile response time for {{ $labels.service }} is above 2 seconds"
  alertmanagerFiles:
    alertmanager.yml:
      global:
        smtp_smarthost: 'localhost:587'
        smtp_from: 'alerts@petclinic.com'
        resolve_timeout: 5m
      route:
        group_by: ['alertname', 'environment', 'service']
        group_wait: 10s
        group_interval: 10s
        repeat_interval: 1h
        receiver: 'web.hook'
        routes:
          - match:
              severity: critical
            receiver: 'critical-alerts'
          - match:
              severity: warning
            receiver: 'warning-alerts'
      receivers:
        - name: 'web.hook'
          webhook_configs:
            - url: 'http://127.0.0.1:5001/'
              send_resolved: true
        - name: 'critical-alerts'
          webhook_configs:
            - url: 'http://127.0.0.1:5001/critical'
              send_resolved: true
              title: 'Critical Alert: {{ .GroupLabels.alertname }}'
              text: '{{ range .Alerts }}{{ .Annotations.summary }}: {{ .Annotations.description }}{{ end }}'
        - name: 'warning-alerts'
          webhook_configs:
            - url: 'http://127.0.0.1:5001/warning'
              send_resolved: true

loki-stack:
  promtail:
    enabled: true
    config:
      clients:
        - url: http://{{ .Release.Name }}-loki:3100/loki/api/v1/push
      scrape_configs:
        - job_name: kubernetes-pods
          kubernetes_sd_configs:
            - role: pod
              namespaces:
                names: ['{{ .Values.namespace }}']
          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_pod_container_name]
              target_label: container
            - source_labels: [__meta_kubernetes_namespace]
              target_label: namespace
            - source_labels: [__meta_kubernetes_pod_name]
              target_label: pod
            - source_labels: [__meta_kubernetes_pod_label_app]
              target_label: service
            - source_labels: [__meta_kubernetes_pod_label_version]
              target_label: version
          pipeline_stages:
            - match:
                selector: '{container=~".*petclinic.*"}'
                stages:
                  - regex:
                      expression: '.*(?:traceId|trace.id|X-Trace-Id)[:=]\s*(?P<trace_id>[a-f0-9]+).*'
                  - regex:
                      expression: '.*(?:spanId|span.id|X-Span-Id)[:=]\s*(?P<span_id>[a-f0-9]+).*'
                  - regex:
                      expression: '.*(?:requestId|request.id|X-Request-Id)[:=]\s*(?P<request_id>[a-zA-Z0-9\-]+).*'
                  - regex:
                      expression: '.*(?:userId|user.id|X-User-Id)[:=]\s*(?P<user_id>[a-zA-Z0-9\-]+).*'
                  - regex:
                      expression: '.*(?:sessionId|session.id|X-Session-Id)[:=]\s*(?P<session_id>[a-zA-Z0-9\-]+).*'
                  - regex:
                      expression: '.*\s(?P<level>ERROR|WARN|INFO|DEBUG|TRACE)\s.*'
                  - regex:
                      expression: '.*status[:=]\s*(?P<status_code>[0-9]+).*'
                  - labels:
                      trace_id:
                      span_id:
                      request_id:
                      user_id:
                      session_id:
                      level:
                      status_code:
                      environment: '{{ .Values.namespace | replace "petclinic-" "" }}'
  loki:
    persistence:
      enabled: true
      size: 5Gi
    config:
      schema_config:
        configs:
          - from: 2020-10-24
            store: boltdb-shipper
            object_store: filesystem
            schema: v11
            index:
              prefix: "{{ .Values.namespace }}_index_"
              period: 24h
      server:
        http_listen_port: 3100
  grafana:
    enabled: true
    adminPassword: admin
    service:
      type: ClusterIP
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus
            type: prometheus
            url: http://{{ .Release.Name }}-prometheus-server
            access: proxy
            isDefault: true
          - name: Loki
            type: loki
            url: http://{{ .Release.Name }}-loki:3100
            access: proxy
            jsonData:
              derivedFields:
                - name: "Trace ID"
                  matcherRegex: "trace_id=(\\w+)"
                  url: "http://{{ .Release.Name }}-jaeger:16686/trace/$${__value.raw}"
                - name: "Request ID"
                  matcherRegex: "request_id=(\\w+)"
                  url: "/explore?orgId=1&left=%5B%22now-1h%22,%22now%22,%22Loki%22,%7B%22expr%22:%22%7Brequest_id%3D%5C%22$${__value.raw}%5C%22%7D%22%7D%5D"
          - name: Jaeger
            type: jaeger
            url: http://tracing-server.{{ .Values.namespace }}.svc.cluster.local:16686
            access: proxy
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: 'petclinic'
            orgId: 1
            folder: 'PetClinic'
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/petclinic
    dashboards:
      petclinic:
        service-overview:
          json: |
            {
              "dashboard": {
                "id": null,
                "title": "PetClinic Services Overview",
                "tags": ["petclinic"],
                "timezone": "browser",
                "panels": [
                  {
                    "id": 1,
                    "title": "Request Rate by Service",
                    "type": "graph",
                    "targets": [
                      {
                        "expr": "rate(http_server_requests_seconds_count[5m])",
                        "legendFormat": "{{ "{{" }} service {{ "}}" }} - {{ "{{" }} status {{ "}}" }}"
                      }
                    ],
                    "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
                  },
                  {
                    "id": 2,
                    "title": "Error Rate (30s window)",
                    "type": "stat",
                    "targets": [
                      {
                        "expr": "increase(http_server_requests_seconds_count{status=~\"4..|5..\"}[30s])",
                        "legendFormat": "{{ "{{" }} service {{ "}}" }} Errors"
                      }
                    ],
                    "fieldConfig": {
                      "defaults": {
                        "thresholds": {
                          "steps": [
                            {"color": "green", "value": null},
                            {"color": "yellow", "value": 5},
                            {"color": "red", "value": 10}
                          ]
                        }
                      }
                    },
                    "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
                  },
                  {
                    "id": 3,
                    "title": "Response Time Distribution",
                    "type": "graph",
                    "targets": [
                      {
                        "expr": "histogram_quantile(0.50, rate(http_server_requests_seconds_bucket[5m]))",
                        "legendFormat": "50th percentile"
                      },
                      {
                        "expr": "histogram_quantile(0.95, rate(http_server_requests_seconds_bucket[5m]))",
                        "legendFormat": "95th percentile"
                      },
                      {
                        "expr": "histogram_quantile(0.99, rate(http_server_requests_seconds_bucket[5m]))",
                        "legendFormat": "99th percentile"
                      }
                    ],
                    "gridPos": {"h": 8, "w": 24, "x": 0, "y": 8}
                  },
                  {
                    "id": 4,
                    "title": "Error Logs (Correlated)",
                    "type": "logs",
                    "targets": [
                      {
                        "expr": "{namespace=\"{{ .Values.namespace }}\", level=~\"ERROR|WARN\"} | json",
                        "refId": "A"
                      }
                    ],
                    "options": {
                      "showTime": true,
                      "showLabels": true,
                      "sortOrder": "Descending"
                    },
                    "gridPos": {"h": 10, "w": 24, "x": 0, "y": 16}
                  }
                ],
                "time": {
                  "from": "now-1h",
                  "to": "now"
                },
                "refresh": "5s"
              }
            }
        correlation-dashboard:
          json: |
            {
              "dashboard": {
                "id": null,
                "title": "Request Correlation Dashboard",
                "tags": ["petclinic", "correlation"],
                "timezone": "browser",
                "templating": {
                  "list": [
                    {
                      "name": "trace_id",
                      "type": "textbox",
                      "label": "Trace ID",
                      "current": {"value": "", "text": ""}
                    },
                    {
                      "name": "request_id", 
                      "type": "textbox",
                      "label": "Request ID",
                      "current": {"value": "", "text": ""}
                    }
                  ]
                },
                "panels": [
                  {
                    "id": 1,
                    "title": "Request Metrics by Trace ID",
                    "type": "graph",
                    "targets": [
                      {
                        "expr": "http_server_requests_seconds_count{trace_id=\"$trace_id\"}",
                        "legendFormat": "Request Count"
                      },
                      {
                        "expr": "http_server_requests_seconds_sum{trace_id=\"$trace_id\"} / http_server_requests_seconds_count{trace_id=\"$trace_id\"}",
                        "legendFormat": "Avg Response Time"
                      }
                    ],
                    "gridPos": {"h": 8, "w": 24, "x": 0, "y": 0}
                  },
                  {
                    "id": 2,
                    "title": "Related Logs by Trace ID",
                    "type": "logs",
                    "targets": [
                      {
                        "expr": "{trace_id=\"$trace_id\"} | json",
                        "refId": "A"
                      }
                    ],
                    "gridPos": {"h": 10, "w": 24, "x": 0, "y": 8}
                  },
                  {
                    "id": 3,
                    "title": "Related Logs by Request ID",
                    "type": "logs",
                    "targets": [
                      {
                        "expr": "{request_id=\"$request_id\"} | json",
                        "refId": "A"
                      }
                    ],
                    "gridPos": {"h": 10, "w": 24, "x": 0, "y": 18}
                  }
                ],
                "time": {
                  "from": "now-1h",
                  "to": "now"
                },
                "refresh": "10s"
              }
            }